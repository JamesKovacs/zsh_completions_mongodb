#compdef mongos

_arguments -S \
  {-h,--help}"[Show this usage information]" \
  "--version[Show version information]" \
  {-f,--config}"[Configuration file specifying additional options]:filename:_files" \
  "--configExpand[Process expansion directives in config file (none, exec, rest)]:arg:(none exec rest)" \
  {-v,--verbose}"[Be more verbose (include multiple times for more verbosity e.g. -vvvvv)]" \
  "--quiet[Quieter output]" \
  "--port[Specify port number (default: 27017)]:arg:(27017)" \
  "--bind_ip[Comma separated list of ip addresses to listen on - all local ips by default]:arg:(127.0.0.1)" \
  "--bind_ip_all[Bind to all ip addresses (MongoDB 3.6+)]" \
  "--listenBacklog[Set socket listen backlog size (MongoDB 3.6+)]:arg:(128)" \
  "--networkMessageCompressors[Enables network compression for communication (default: snappy,zstd,zlib)]:arg:(snappy,zstd,zlib)" \
  "--maxConns[Max number of simultaneous connections - 1000000 by default]:arg:(1000000)" \
  "--logpath[Log file to send write to instead of stdout - has to be a file, not directory]:filename:_files" \
  "--syslog[Log to system's syslog facility instead of file or stdout]" \
  "--syslogFacility[Set syslog facility used for mongodb syslog message (default:user)]:arg:(user)" \
  "--logappend[Append to logpath instead of over-writing]" \
  "--logRotate[Set the log rotation behavior (rename|reopen)]:arg:(rename reopen)" \
  "--timeStampFormat[Desired format for timestamps in log messages. One of ctime, iso8601-utc or iso8601-local]:arg:(ctime iso8601-utc iso8601-local)" \
  "--pidfilepath[Full path to pidfile (if not set, no pidfile is created)]:filename:_files" \
  "--timeZoneInfo[Full path to time zone info directory, e.g. /usr/share/zoneinfo]:arg:" \
  "--keyFile[Private key for cluster authentication]:filename:_files" \
  "--noauth[Run without security]" \
  "--setParameter[Set a configurable parameter]:arg:" \
  "--clusterAuthMode[Authentication mode used for cluster authentication. Alternatives are (keyFile|sendKeyFile|sendX509|x509)]:arg:(keyFile sendKeyFile sendX509 x509)" \
  "--nounixsocket[Disable listening on UNIX domain socket]" \
  "--unixSocketPrefix[Alternative directory for UNIX domain sockets (defaults to /tmp)]:arg:(/tmp)" \
  "--filePermissions[Permissions to set on UNIX domain socket file - 0700 by default]:arg:(0700)" \
  "--fork[Fork server process]" \
  "--configdb[Connection string for communicating with config servers. Acceptable forms: CSRS: <config replset name>/<host1:port>,<host2:port>,\[...\] SCCC (deprecated): <host1:port>,<host2: port>,<host3:port> Single-node (for testing only): <host1:port>]:arg:" \
  "--localThreshold[Ping time (in ms) for a node to be considered local (default 15ms)]:arg:" \
  "--chunkSize[Maximum amount of data per chunk in MB (default: 64)]:arg:(64)" \
  "--noscripting[Disable scripting engine]" \
  "--sslOnNormalPorts[Use SSL on configured ports]" \
  "--sslMode[Set the SSL operation mode (disabled|allowSSL|preferSSL|requireSSL)]:arg:(disabled allowSSL preferSSL requireSSL)" \
  "--sslPEMKeyFile[PEM file for SSL]:filename:_files" \
  "--sslPEMKeyPassword[PEM file password]:arg:" \
  "--sslClusterFile[Key file for internal SSL authentication]:filename:_files" \
  "--sslClusterPassword[Internal authentication key file password]:arg:" \
  "--sslCAFile[Certificate Authority file for SSL]:filename:_files" \
  "--sslCRLFile[Certificate Revocation List file for SSL]:filename:_files" \
  "--sslDisabledProtocols[Comma separated list of TLS protocols to disable \[TLS1_0,TLS1_1,TLS1_2\]]" \
  "--sslWeakCertificateValidation[Allow client to connect without presenting a certificate]" \
  "--sslAllowConnectionsWithoutCertificates[Allow client to connect without presenting a certificate]" \
  "--sslAllowInvalidHostnames[Allow server certificates to provide non-matching hostnames]" \
  "--sslAllowInvalidCertificates[Allow connections to servers with invalid certificates]" \
  "--sslFIPSMode[Activate FIPS 140-2 mode at startup]" \
  "--tlsOnNormalPorts[Use TLS on configured ports]" \
  "--tlsMode[Set the TLS operation mode (disabled|allowTLS|preferTLS|requireTLS)]:arg:(disabled allowTLS preferTLS requireTLS)" \
  "--tlsCertificateKeyFile[Certificate and key file for TLS]:filename:_files" \
  "--tlsCertificateKeyFilePassword[Password to unlock key in the TLS certificate key file]:arg:" \
  "--tlsClusterFile[Key file for internal TLS authentication]:filename:_files" \
  "--tlsClusterPassword[Internal authentication key file password]:arg:" \
  "--tlsCAFile[Certificate Authority file for TLS]:filename:_files" \
  "--tlsClusterCAFile[CA used for verifying remotes during inbound connections]:filename:_files" \
  "--tlsCRLFile[Certificate Revocation List file for TLS]:filename:_files" \
  "--tlsDisabledProtocols[Comma separated list of TLS protocols to disable \[TLS1_0,TLS1_1,TLS1_2\]]" \
  "--tlsAllowConnectionsWithoutCertificates[Allow client to connect without presenting a certificate]" \
  "--tlsAllowInvalidHostnames[Allow server certificates to provide non-matching hostnames]" \
  "--tlsAllowInvalidCertificates[Allow connections to servers with invalid certificates]" \
  "--tlsFIPSMode[Activate FIPS 140-2 mode at startup]" \
  "--tlsCertificateSelector[TLS Certificate in system store]" \
  "--tlsClusterCertificateSelector[SSL/TLS Certificate in system store for internal TLS authentication]" \
  "--tlsLogVersions[Comma separated list of TLS protocols to log on connect \[TLS1_0,TLS1_1,TLS1_2\]]" \
  "--transitionToAuth[Accept and create authenticated and non-authenticated connections (MongoDB 3.4+)]" \
  && return 0

return 1

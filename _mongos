#compdef mongos

_arguments -S \
  {-h,--help}"[show this usage information]" \
  "--version[show version information]" \
  {-f,--config}"[configuration file specifying additional options]:filename:{_files}" \
  {-v,--verbose}"[be more verbose (include multiple times for more verbosity e.g. -vvvvv)]" \
  "--quiet[quieter output]" \
  "--port[specify port number - 27017 by default]:port number:" \
  "--bind_ip[comma separated list of ip addresses to listen on - all local ips by default]:IPs:" \
  "--ipv6[enable IPv6 support (disabled by default)]" \
  "--maxConns[max number of simultaneous connections - 1000000 by default]:numConns:" \
  "--logpath[log file to send write to instead of stdout - has to be a file, not directory]:filename:_files" \
  "--syslog[log to system's syslog facility instead of file or stdout]" \
  "--syslogFacility[syslog facility used for mongodb syslog message]:facility:" \
  "--logappend[append to logpath instead of over-writing]" \
  "--logRotate[set the log rotation behavior (rename|reopen)]:behavior:(rename repoen)" \
  "--timeStampFormat[Desired format for timestamps in log messages. One of ctime, iso8601-utc or iso8601-local]:format:(ctime iso8601-utc iso8601-local)" \
  "--pidfilepath[full path to pidfile (if not set, no pidfile is created)]:filename:_files" \
  "--keyFile[private key for cluster authentication]:filename:_files" \
  "--noauth[run without security]" \
  "--setParameter[Set a configurable parameter]:parameter:" \
  "--httpinterface[enable http interface]" \
  "--clusterAuthMode[Authentication mode used for cluster authentication. Alternatives are (keyFile|sendKeyFile|sendX509|x509)]:mode:(keyfile sendKeyFile sendX509 x509)" \
  "--nounixsocket[disable listening on unix sockets]" \
  "--unixSocketPrefix[alternative directory for UNIX domain sockets (defaults to /tmp)]:prefix:" \
  "--filePermissions[permissions to set on UNIX domain socket file - 0700 by default]:permissions:" \
  "--fork[fork server process]" \
  "--configdb[Connection string for communicating with config servers. Acceptable forms: CSRS: <config replset name>/<host1:port>,<host2:port>,\[...\] SCCC (deprecated): <host1:port>,<host2: port>,<host3:port> Single-node (for testing only): <host1:port>]:uri:" \
  "--localThreshold[ping time (in ms) for a node to be considered local (default 15ms)]:interval:" \
  "--test[just run unit tests]" \
  "--chunkSize[maximum amount of data per chunk]:size:" \
  "--jsonp[allow JSONP access via http (has security implications)]" \
  "--noscripting[disable scripting engine]" \
  "--sslOnNormalPorts[use ssl on configured ports]" \
  "--sslMode[set the SSL operation mode (disabled|allowSSL|preferSSL|requireSSL)]:mode:(disabled allowSSL preferSSL requireSSL)" \
  "--sslPEMKeyFile[PEM file for ssl]:filename:_files" \
  "--sslPEMKeyPassword[PEM file password]:filename:_files" \
  "--sslClusterFile[Key file for internal SSL authentication]:filename:_files" \
  "--sslClusterPassword[Internal authentication key file password]:filename:_files" \
  "--sslCAFile[Certificate Authority file for SSL]:filename:_files" \
  "--sslCRLFile[Certificate Revocation List file for SSL]:filename:_files" \
  "--sslDisabledProtocols[Comma separated list of TLS protocols to disable \[TLS1_0,TLS1_1,TLS1_2\]]:protocol:(TLS1_0 TLS1_1 TLS1_2)" \
  "--sslWeakCertificateValidation[allow client to connect without presenting a certificate]" \
  "--sslAllowConnectionsWithoutCertificates[allow client to connect without presenting a certificate]" \
  "--sslAllowInvalidHostnames[Allow server certificates to provide non-matching hostnames]" \
  "--sslAllowInvalidCertificates[allow connections to servers with invalid certificates]" \
  "--sslFIPSMode[activate FIPS 140-2 mode at startup]" \
  && return 0

return 1

